<Window x:Class="Study_Planner.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:c="clr-namespace:Study_Planner.Components"
        mc:Ignorable="d"
        Height="800" 
        Width="1200" 
        Background="White" 
        WindowStyle="None" 
        AllowsTransparency="False" 
        ResizeMode="NoResize">
    <Window.Resources>
        <c:TaskViewModel x:Key="tasksDataSource" />
        <Style x:Key="DefaultElementMargin">
            <Setter Property="Control.Margin" Value="5" />
        </Style>
        <Style x:Key="WindowControlsButtonBaseStyle" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Width" Value="50" />
            <Setter Property="Height" Value="30" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Control.BorderThickness" Value="0" />
            <Setter Property="Control.FontWeight" Value="Bold" />
            <Setter Property="Control.Background" Value="White" />
        </Style>
        <Style x:Key="MinimizeButtonStyle" BasedOn="{StaticResource WindowControlsButtonBaseStyle}" TargetType="Button">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Control.Background" Value="#FFEDEDED" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="CloseButtonStyle" BasedOn="{StaticResource WindowControlsButtonBaseStyle}" TargetType="Button">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Control.Foreground" Value="White" />
                    <Setter Property="Control.Background" Value="#FFE81325" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="RoundedBorderStyle" BasedOn="{StaticResource DefaultElementMargin}" TargetType="Border">
            <Setter Property="Control.BorderThickness" Value="0.5" />
            <Setter Property="Control.BorderBrush" Value="Gray" />
            <Setter Property="Control.Padding" Value="0" />
            <Setter Property="CornerRadius" Value="3" />
        </Style>
        <Style x:Key="MainTaskPanelStyle" BasedOn="{StaticResource DefaultElementMargin}" TargetType="ItemsControl">
            <Setter Property="Control.Height" Value="710" />
            <Setter Property="Control.BorderThickness" Value="0" />
            <Setter Property="Control.Margin" Value="5,5,5,25" />
        </Style>
        <Style x:Key="DefaultButtonStyle" TargetType="Button">
            <Style.Setters>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border CornerRadius="3"
                                    Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Control.Margin" Value="5" />
                <Setter Property="Control.BorderThickness" Value="0" />
                <Setter Property="Control.Background" Value="#FFEDEDED" />
                <Setter Property="Control.FontWeight" Value="Bold" />
                <Setter Property="Control.Padding" Value="7" />
            </Style.Setters>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Control.Background" Value="#FFC3C3C3" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <DataTemplate x:Key="taskTemplate">
            <Border BorderBrush="Gray" BorderThickness="0.3" CornerRadius="3" Height="40" VerticalAlignment="Center" Margin="3">
                <WrapPanel Width="480" Height="40">
                    <Button x:Name="ToggleCompletedButton" 
                            Content="Done" 
                            Command="{Binding Source={StaticResource tasksDataSource}, Path=ToggleCompletedCommand}" 
                            CommandParameter="{Binding}" 
                            Style="{StaticResource DefaultButtonStyle}"
                            Width="40" />
                    <Button x:Name="DeleteTaskButton" 
                            Content="Delete" 
                            Command="{Binding Source={StaticResource tasksDataSource}, Path=DeleteTaskCommand}" 
                            CommandParameter="{Binding}" 
                            Style="{StaticResource DefaultButtonStyle}"
                            Width="40" />
                    <Button x:Name="EditTaskButton" 
                            Content="Edit" 
                            Command="{Binding Source={StaticResource tasksDataSource}, Path=EditTaskCommand}" 
                            CommandParameter="{Binding}" 
                            Style="{StaticResource DefaultButtonStyle}"
                            Width="40" />
                    <Button x:Name="SaveTaskButton" 
                            Content="Save"
                            Command="{Binding Source={StaticResource tasksDataSource}, Path=SaveTaskCommand}" 
                            CommandParameter="{Binding ElementName=TaskDescriptionEditBox}"
                            Style="{StaticResource DefaultButtonStyle}" 
                            Width="40" />
                    <Button x:Name="UndoneTaskButton" 
                            Content="Undone"
                            Command="{Binding Source={StaticResource tasksDataSource}, Path=ToggleCompletedCommand}" 
                            CommandParameter="{Binding}"
                            Style="{StaticResource DefaultButtonStyle}" 
                            Width="50" />
                    <TextBlock x:Name="TaskLabel" Text="{Binding Path=ShortDescription}" Margin="10,10,50,10" Height="20" />
                    <TextBox x:Name="TaskDescriptionEditBox" 
                             DataContext="{Binding}" 
                             Text="{Binding Path=ShortDescription}" 
                             Margin="10,10,50,10" 
                             Height="20" />
                </WrapPanel>
            </Border>
            <DataTemplate.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=IsCompleted}" Value="True" />
                        <Condition Binding="{Binding Path=IsEditModeEnabled}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter TargetName="ToggleCompletedButton" Property="Visibility" Value="Collapsed" />
                        <Setter TargetName="DeleteTaskButton" Property="Visibility" Value="Visible" />
                        <Setter TargetName="EditTaskButton" Property="Visibility" Value="Collapsed" />
                        <Setter TargetName="SaveTaskButton" Property="Visibility" Value="Visible" />
                        <Setter TargetName="TaskLabel" Property="Visibility" Value="Collapsed" />
                        <Setter TargetName="TaskDescriptionEditBox" Property="Visibility" Value="Visible" />
                        <Setter TargetName="UndoneTaskButton" Property="Visibility" Value="Visible" />
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=IsCompleted}" Value="False" />
                        <Condition Binding="{Binding Path=IsEditModeEnabled}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter TargetName="ToggleCompletedButton" Property="Visibility" Value="Collapsed" />
                        <Setter TargetName="DeleteTaskButton" Property="Visibility" Value="Visible" />
                        <Setter TargetName="EditTaskButton" Property="Visibility" Value="Collapsed" />
                        <Setter TargetName="SaveTaskButton" Property="Visibility" Value="Visible" />
                        <Setter TargetName="TaskLabel" Property="Visibility" Value="Collapsed" />
                        <Setter TargetName="TaskDescriptionEditBox" Property="Visibility" Value="Visible" />
                        <Setter TargetName="UndoneTaskButton" Property="Visibility" Value="Collapsed" />
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=IsCompleted}" Value="True" />
                        <Condition Binding="{Binding Path=IsEditModeEnabled}" Value="False" />
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter TargetName="TaskLabel" Property="TextDecorations" Value="Strikethrough" />
                        <Setter TargetName="ToggleCompletedButton" Property="Visibility" Value="Collapsed" />
                        <Setter TargetName="DeleteTaskButton" Property="Visibility" Value="Collapsed" />
                        <Setter TargetName="EditTaskButton" Property="Visibility" Value="Visible" />
                        <Setter TargetName="SaveTaskButton" Property="Visibility" Value="Collapsed" />
                        <Setter TargetName="TaskLabel" Property="Visibility" Value="Visible" />
                        <Setter TargetName="TaskDescriptionEditBox" Property="Visibility" Value="Collapsed" />
                        <Setter TargetName="UndoneTaskButton" Property="Visibility" Value="Collapsed" />
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=IsCompleted}" Value="False" />
                        <Condition Binding="{Binding Path=IsEditModeEnabled}" Value="False" />
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter TargetName="TaskLabel" Property="TextDecorations" Value="None" />
                        <Setter TargetName="ToggleCompletedButton" Property="Visibility" Value="Visible" />
                        <Setter TargetName="DeleteTaskButton" Property="Visibility" Value="Collapsed" />
                        <Setter TargetName="EditTaskButton" Property="Visibility" Value="Visible" />
                        <Setter TargetName="SaveTaskButton" Property="Visibility" Value="Collapsed" />
                        <Setter TargetName="TaskLabel" Property="Visibility" Value="Visible" />
                        <Setter TargetName="TaskDescriptionEditBox" Property="Visibility" Value="Collapsed" />
                        <Setter TargetName="UndoneTaskButton" Property="Visibility" Value="Collapsed" />
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
        <ItemsPanelTemplate x:Key="taskPanelTemplate">
            <WrapPanel />
        </ItemsPanelTemplate>
        <ControlTemplate x:Key="ItemsControlTemplate" TargetType="{x:Type ItemsControl}">
            <Border Style="{StaticResource RoundedBorderStyle}" 
                    Margin="0"
                    Background="{TemplateBinding Background}" 
                    SnapsToDevicePixels="true">
                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </Border>
        </ControlTemplate>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" 
                                Height="30" 
                                BorderBrush="Gray" 
                                BorderThickness="0.7" 
                                Style="{StaticResource RoundedBorderStyle}" 
                                Margin="5" 
                                Padding="3" 
                                Background="{TemplateBinding Background}" 
                                SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" 
                                          Focusable="false" 
                                          HorizontalScrollBarVisibility="Hidden" 
                                          VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Window.DataContext>
        <Binding Source="{StaticResource tasksDataSource}"/>
    </Window.DataContext>
    <Border Background="White">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20" />
                <ColumnDefinition Width="150" />
                <ColumnDefinition Width="20" />
                <ColumnDefinition Width="500" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="100" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="30" />
                <RowDefinition Height="*" />
                <RowDefinition Height="30" />
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="1" Grid.Column="1">
                <TextBox Style="{DynamicResource TextBoxStyle}" x:Name="DescriptionField"  BorderThickness="0" VerticalAlignment="Center"/>
                <Button Content="Add Task" 
                        Height="30"
                        Command="{Binding AddTaskCommand}" 
                        CommandParameter="{Binding ElementName=DescriptionField, Path=Text}" 
                        Style="{StaticResource DefaultButtonStyle}" />
            </StackPanel>
            <ItemsControl Template="{DynamicResource ItemsControlTemplate}" x:Name="TasksList" 
                              Grid.Row="1" 
                              Grid.Column="3"
                              ItemsSource="{Binding Tasks}"
                              ItemTemplate="{StaticResource taskTemplate}"
                              ItemsPanel="{StaticResource taskPanelTemplate}"
                              Style="{StaticResource MainTaskPanelStyle}" Margin="5,5,5,25" />
            <WrapPanel Grid.Column="5" Grid.Row="0" HorizontalAlignment="Right">
                <Button x:Name="MinimizeButton" Content="—" Click="MinimizeButton_Click" Style="{StaticResource MinimizeButtonStyle}" />
                <Button x:Name="CloseButton" Content="✕" Click="CloseButton_Click" Style="{StaticResource CloseButtonStyle}" />
            </WrapPanel>
        </Grid>
    </Border>
</Window>